/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Registry, RegistryInterface } from "../Registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_regexAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ContractRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indices",
        type: "uint256[]",
      },
    ],
    name: "indicesToMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_query",
        type: "string",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "regexAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_author",
        type: "string",
      },
    ],
    name: "retrieveByAuthor",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_event",
        type: "string",
      },
    ],
    name: "retrieveByEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_function",
        type: "string",
      },
    ],
    name: "retrieveByFunction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "retrieveById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_internalAddress",
        type: "string",
      },
    ],
    name: "retrieveByInternalAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "retrieveByName",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_signature",
        type: "string",
      },
    ],
    name: "retrieveBySignature",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Registry.BlockchainType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "retrieveByType",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "retrieveByUrl",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    name: "retrieveByVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "author",
                type: "string",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_regexAddress",
        type: "address",
      },
    ],
    name: "setRegexAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            internalType: "string",
            name: "internalAddress",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "functions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "events",
            type: "string[]",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "enum Registry.BlockchainType",
            name: "blockChainType",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.SCDMetadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "author",
            type: "string",
          },
          {
            internalType: "string",
            name: "internalAddress",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "functions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "events",
            type: "string[]",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
          {
            internalType: "enum Registry.BlockchainType",
            name: "blockChainType",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.SCDMetadata[]",
        name: "_metadata",
        type: "tuple[]",
      },
    ],
    name: "storeMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200474b3803806200474b8339818101604052810190620000379190620000e9565b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b620000c381620000a4565b8114620000cf57600080fd5b50565b600081519050620000e381620000b8565b92915050565b6000602082840312156200010257620001016200007f565b5b60006200011284828501620000d2565b91505092915050565b614620806200012b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637c26192911610097578063b912b68e11610066578063b912b68e1461031f578063bb9252011461033b578063e11a4fb914610357578063fa43d2ee1461038757610100565b80637c2619291461025f5780638adb1e2d1461028f57806390395c37146102bf578063b3fe029b146102ef57610100565b80635affe82f116100d35780635affe82f146101b35780636b86f802146101e35780636e029980146102135780637af706d71461024357610100565b806305569ebc146101055780630821b674146101235780630f1db7aa146101535780634a8342c714610183575b600080fd5b61010d6103b7565b60405161011a91906131d6565b60405180910390f35b61013d6004803603810190610138919061334b565b6103dd565b60405161014a9190613793565b60405180910390f35b61016d6004803603810190610168919061334b565b6103f1565b60405161017a9190613793565b60405180910390f35b61019d6004803603810190610198919061334b565b610405565b6040516101aa9190613793565b60405180910390f35b6101cd60048036038101906101c8919061334b565b610419565b6040516101da9190613793565b60405180910390f35b6101fd60048036038101906101f891906138a9565b61042d565b60405161020a9190613793565b60405180910390f35b61022d600480360381019061022891906138f2565b610a96565b60405161023a919061395c565b60405180910390f35b61025d60048036038101906102589190613c90565b61104c565b005b6102796004803603810190610274919061334b565b6113f1565b6040516102869190613793565b60405180910390f35b6102a960048036038101906102a4919061334b565b6116ec565b6040516102b69190613793565b60405180910390f35b6102d960048036038101906102d4919061334b565b611700565b6040516102e69190613793565b60405180910390f35b6103096004803603810190610304919061334b565b611714565b6040516103169190613793565b60405180910390f35b61033960048036038101906103349190613dba565b611728565b005b61035560048036038101906103509190613e2f565b61176e565b005b610371600480360381019061036c9190613e5c565b6117b2565b60405161037e9190613793565b60405180910390f35b6103a1600480360381019061039c919061334b565b611808565b6040516103ae9190613793565b60405180910390f35b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606103ea60058361181c565b9050919050565b60606103fe60068361181c565b9050919050565b606061041260078361181c565b9050919050565b606061042660098361181c565b9050919050565b60606000825167ffffffffffffffff81111561044c5761044b613220565b5b60405190808252806020026020018201604052801561048557816020015b610472612f73565b81526020019060019003908161046a5790505b50905060005b8351811015610a8c5760008482815181106104a9576104a8613e89565b5b60200260200101519050604051806040016040528082815260200160016000848152602001908152602001600020604051806101400160405290816000820180546104f390613ee7565b80601f016020809104026020016040519081016040528092919081815260200182805461051f90613ee7565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050815260200160018201805461058590613ee7565b80601f01602080910402602001604051908101604052809291908181526020018280546105b190613ee7565b80156105fe5780601f106105d3576101008083540402835291602001916105fe565b820191906000526020600020905b8154815290600101906020018083116105e157829003601f168201915b5050505050815260200160028201805461061790613ee7565b80601f016020809104026020016040519081016040528092919081815260200182805461064390613ee7565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b505050505081526020016003820180546106a990613ee7565b80601f01602080910402602001604051908101604052809291908181526020018280546106d590613ee7565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b5050505050815260200160048201805461073b90613ee7565b80601f016020809104026020016040519081016040528092919081815260200182805461076790613ee7565b80156107b45780601f10610789576101008083540402835291602001916107b4565b820191906000526020600020905b81548152906001019060200180831161079757829003601f168201915b505050505081526020016005820180546107cd90613ee7565b80601f01602080910402602001604051908101604052809291908181526020018280546107f990613ee7565b80156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b8282101561092057838290600052602060002001805461089390613ee7565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf90613ee7565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081526020019060010190610874565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b828210156109f957838290600052602060002001805461096c90613ee7565b80601f016020809104026020016040519081016040528092919081815260200182805461099890613ee7565b80156109e55780601f106109ba576101008083540402835291602001916109e5565b820191906000526020600020905b8154815290600101906020018083116109c857829003601f168201915b50505050508152602001906001019061094d565b5050505081526020016008820160009054906101000a900460ff161515151581526020016008820160019054906101000a900460ff166003811115610a4157610a4061353e565b5b6003811115610a5357610a5261353e565b5b81525050815250838381518110610a6d57610a6c613e89565b5b6020026020010181905250508080610a8490613f48565b91505061048b565b5080915050919050565b610a9e612f73565b60405180604001604052808381526020016001600085815260200190815260200160002060405180610140016040529081600082018054610ade90613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0a90613ee7565b8015610b575780601f10610b2c57610100808354040283529160200191610b57565b820191906000526020600020905b815481529060010190602001808311610b3a57829003601f168201915b50505050508152602001600182018054610b7090613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9c90613ee7565b8015610be95780601f10610bbe57610100808354040283529160200191610be9565b820191906000526020600020905b815481529060010190602001808311610bcc57829003601f168201915b50505050508152602001600282018054610c0290613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2e90613ee7565b8015610c7b5780601f10610c5057610100808354040283529160200191610c7b565b820191906000526020600020905b815481529060010190602001808311610c5e57829003601f168201915b50505050508152602001600382018054610c9490613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc090613ee7565b8015610d0d5780601f10610ce257610100808354040283529160200191610d0d565b820191906000526020600020905b815481529060010190602001808311610cf057829003601f168201915b50505050508152602001600482018054610d2690613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5290613ee7565b8015610d9f5780601f10610d7457610100808354040283529160200191610d9f565b820191906000526020600020905b815481529060010190602001808311610d8257829003601f168201915b50505050508152602001600582018054610db890613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610de490613ee7565b8015610e315780601f10610e0657610100808354040283529160200191610e31565b820191906000526020600020905b815481529060010190602001808311610e1457829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015610f0b578382906000526020600020018054610e7e90613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaa90613ee7565b8015610ef75780601f10610ecc57610100808354040283529160200191610ef7565b820191906000526020600020905b815481529060010190602001808311610eda57829003601f168201915b505050505081526020019060010190610e5f565b50505050815260200160078201805480602002602001604051908101604052809291908181526020016000905b82821015610fe4578382906000526020600020018054610f5790613ee7565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8390613ee7565b8015610fd05780601f10610fa557610100808354040283529160200191610fd0565b820191906000526020600020905b815481529060010190602001808311610fb357829003601f168201915b505050505081526020019060010190610f38565b5050505081526020016008820160009054906101000a900460ff161515151581526020016008820160019054906101000a900460ff16600381111561102c5761102b61353e565b5b600381111561103e5761103d61353e565b5b815250508152509050919050565b806001600061105b6000611859565b81526020019081526020016000206000820151816000019080519060200190611085929190612f93565b5060208201518160010190805190602001906110a2929190612f93565b5060408201518160020190805190602001906110bf929190612f93565b5060608201518160030190805190602001906110dc929190612f93565b5060808201518160040190805190602001906110f9929190612f93565b5060a0820151816005019080519060200190611116929190612f93565b5060c0820151816006019080519060200190611133929190613019565b5060e0820151816007019080519060200190611150929190613019565b506101008201518160080160006101000a81548160ff0219169083151502179055506101208201518160080160016101000a81548160ff0219169083600381111561119e5761119d61353e565b5b02179055509050506111e36111b36000611859565b600283600001516040516111c79190613fcd565b908152602001604051809103902061186790919063ffffffff16565b506112216111f16000611859565b600383602001516040516112059190613fcd565b908152602001604051809103902061186790919063ffffffff16565b5061125f61122f6000611859565b600483604001516040516112439190613fcd565b908152602001604051809103902061186790919063ffffffff16565b5061129d61126d6000611859565b600783606001516040516112819190613fcd565b908152602001604051809103902061186790919063ffffffff16565b506112db6112ab6000611859565b600883608001516040516112bf9190613fcd565b908152602001604051809103902061186790919063ffffffff16565b506113196112e96000611859565b60098360a001516040516112fd9190613fcd565b908152602001604051809103902061186790919063ffffffff16565b506113716113276000611859565b600a600084610120015160038111156113435761134261353e565b5b60038111156113555761135461353e565b5b815260200190815260200160002061186790919063ffffffff16565b5061138b60058260c001516113866000611859565b611881565b6113a460068260e0015161139f6000611859565b611881565b7f101859b3dba86ce4656129408a2ced94ad1036816a199c09304aae22661e5ce26113cf6000611859565b6040516113dc9190613ff3565b60405180910390a16113ee60006118f0565b50565b6060600061140661140184611906565b611934565b11611446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143d9061406b565b60405180910390fd5b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663ddcf46ba856040518263ffffffff1660e01b81526004016114a891906140c4565b60006040518083038186803b1580156114c057600080fd5b505afa1580156114d4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114fd919061420b565b9050600081511161156657600067ffffffffffffffff81111561152357611522613220565b5b60405190808252806020026020018201604052801561155c57816020015b611549612f73565b8152602001906001900390816115415790505b50925050506116e7565b6000815167ffffffffffffffff81111561158357611582613220565b5b6040519080825280602002602001820160405280156115bc57816020015b6115a9613079565b8152602001906001900390816115a15790505b50905060005b825181101561163d576000806115f18584815181106115e4576115e3613e89565b5b6020026020010151611a43565b9150915060405180604001604052808381526020018281525084848151811061161d5761161c613e89565b5b60200260200101819052505050808061163590613f48565b9150506115c2565b50600061166c6116678360008151811061165a57611659613e89565b5b6020026020010151611b60565b61227b565b90506000600190505b82518110156116d65760006116ab6116a685848151811061169957611698613e89565b5b6020026020010151611b60565b61227b565b90506116c0818461229c90919063ffffffff16565b92505080806116ce90613f48565b915050611675565b506116e08161042d565b9450505050505b919050565b60606116f960028361181c565b9050919050565b606061170d60088361181c565b9050919050565b606061172160048361181c565b9050919050565b60005b815181101561176a5761175782828151811061174a57611749613e89565b5b602002602001015161104c565b808061176290613f48565b91505061172b565b5050565b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000600a60008460038111156117cd576117cc61353e565b5b60038111156117df576117de61353e565b5b815260200190815260200160002090506118006117fb8261227b565b61042d565b915050919050565b606061181560038361181c565b9050919050565b60606000838360405161182f9190613fcd565b9081526020016040518091039020905061185061184b8261227b565b61042d565b91505092915050565b600081600001549050919050565b6000611879836000018360001b612450565b905092915050565b60005b82518110156118ea576118d682858584815181106118a5576118a4613e89565b5b60200260200101516040516118ba9190613fcd565b908152602001604051809103902061186790919063ffffffff16565b5080806118e290613f48565b915050611884565b50505050565b6001816000016000828254019250508190555050565b61190e613093565b600060208301905060405180604001604052808451815260200182815250915050919050565b600080601f83602001516119489190614254565b9050600083600001518261195c9190614288565b9050600092505b80821015611a3c57600060ff835116905060808160ff1610156119945760018361198d9190614288565b9250611a28565b60e08160ff1610156119b4576002836119ad9190614288565b9250611a27565b60f08160ff1610156119d4576003836119cd9190614288565b9250611a26565b60f88160ff1610156119f4576004836119ed9190614288565b9250611a25565b60fc8160ff161015611a1457600583611a0d9190614288565b9250611a24565b600683611a219190614288565b92505b5b5b5b5b508280611a3490613f48565b935050611963565b5050919050565b6060806000611a5184611906565b9050611aab611aa6611a976040518060400160405280600181526020017f3d00000000000000000000000000000000000000000000000000000000000000815250611906565b836124c090919063ffffffff16565b6124da565b9250611afd611aee6040518060400160405280600181526020017f2700000000000000000000000000000000000000000000000000000000000000815250611906565b826124c090919063ffffffff16565b50611b4e611b3f6040518060400160405280600181526020017f2700000000000000000000000000000000000000000000000000000000000000815250611906565b8261255690919063ffffffff16565b50611b58816124da565b915050915091565b600080611b708360000151611906565b9050611b7b81612570565b611bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb19061432a565b60405180910390fd5b611c0a611bfb6040518060400160405280600481526020017f4e616d6500000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611c395760028360200151604051611c239190613fcd565b9081526020016040518091039020915050612276565b611c89611c7a6040518060400160405280600681526020017f417574686f720000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611cb85760038360200151604051611ca29190613fcd565b9081526020016040518091039020915050612276565b611d08611cf96040518060400160405280600f81526020017f496e7465726e616c416464726573730000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611d375760048360200151604051611d219190613fcd565b9081526020016040518091039020915050612276565b611d87611d786040518060400160405280600381526020017f55726c0000000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611db65760078360200151604051611da09190613fcd565b9081526020016040518091039020915050612276565b611e06611df76040518060400160405280600981526020017f5369676e61747572650000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611e355760088360200151604051611e1f9190613fcd565b9081526020016040518091039020915050612276565b611e85611e766040518060400160405280600781526020017f56657273696f6e00000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611eb45760098360200151604051611e9e9190613fcd565b9081526020016040518091039020915050612276565b611f04611ef56040518060400160405280600881526020017f46756e6374696f6e000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611f335760058360200151604051611f1d9190613fcd565b9081526020016040518091039020915050612276565b611f83611f746040518060400160405280600581526020017f4576656e74000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b15611fb25760068360200151604051611f9c9190613fcd565b9081526020016040518091039020915050612276565b612002611ff36040518060400160405280600e81526020017f426c6f636b636861696e54797065000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b156122705760006120168460200151611906565b90506120686120596040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b156120ad57600a60008060038111156120845761208361353e565b5b60038111156120965761209561353e565b5b815260200190815260200160002092505050612276565b6120fd6120ee6040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b1561214357600a60006001600381111561211a5761211961353e565b5b600381111561212c5761212b61353e565b5b815260200190815260200160002092505050612276565b6121936121846040518060400160405280600181526020017f3200000000000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b156121d957600a6000600260038111156121b0576121af61353e565b5b60038111156121c2576121c161353e565b5b815260200190815260200160002092505050612276565b61222961221a6040518060400160405280600181526020017f3300000000000000000000000000000000000000000000000000000000000000815250611906565b8261288190919063ffffffff16565b1561226e57600a60006003808111156122455761224461353e565b5b60038111156122575761225661353e565b5b815260200190815260200160002092505050612276565b505b600b9150505b919050565b6060600061228b83600001612897565b905060608190508092505050919050565b6060600080845167ffffffffffffffff8111156122bc576122bb613220565b5b6040519080825280602002602001820160405280156122ea5781602001602082028036833780820191505090505b50905060005b855181101561236b5761231d858783815181106123105761230f613e89565b5b60200260200101516128f3565b1561235857600182828151811061233757612336613e89565b5b602002602001019015159081151581525050828061235490613f48565b9350505b808061236390613f48565b9150506122f0565b5060008267ffffffffffffffff81111561238857612387613220565b5b6040519080825280602002602001820160405280156123b65781602001602082028036833780820191505090505b5090506000805b8751811015612442578381815181106123d9576123d8613e89565b5b60200260200101511561242f578781815181106123f9576123f8613e89565b5b602002602001015183838151811061241457612413613e89565b5b602002602001018181525050818061242b90613f48565b9250505b808061243a90613f48565b9150506123bd565b508194505050505092915050565b600061245c838361290d565b6124b55782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506124ba565b600090505b92915050565b6124c8613093565b6124d3838383612930565b5092915050565b60606000826000015167ffffffffffffffff8111156124fc576124fb613220565b5b6040519080825280601f01601f19166020018201604052801561252e5781602001600182028036833780820191505090505b509050600060208201905061254c81856020015186600001516129fb565b8192505050919050565b61255e613093565b612569838383612aa7565b5092915050565b60006125c26125b36040518060400160405280600481526020017f4e616d6500000000000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b8061261957506126186126096040518060400160405280600681526020017f417574686f720000000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b80612670575061266f6126606040518060400160405280600f81526020017f496e7465726e616c416464726573730000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b806126c757506126c66126b76040518060400160405280600381526020017f55726c0000000000000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b8061271e575061271d61270e6040518060400160405280600981526020017f5369676e61747572650000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b8061277557506127746127656040518060400160405280600781526020017f56657273696f6e00000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b806127cc57506127cb6127bc6040518060400160405280600881526020017f46756e6374696f6e000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b8061282357506128226128136040518060400160405280600581526020017f4576656e74000000000000000000000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b8061287a575061287961286a6040518060400160405280600e81526020017f426c6f636b636861696e54797065000000000000000000000000000000000000815250611906565b8361288190919063ffffffff16565b5b9050919050565b60008061288e8484612b55565b14905092915050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156128e757602002820191906000526020600020905b8154815260200190600101908083116128d3575b50505050509050919050565b6000806129008484612c8f565b9150508091505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b612938613093565b60006129568560000151866020015186600001518760200151612cf0565b905084602001518360200181815250508460200151816129769190614254565b836000018181525050846000015185602001516129939190614288565b8114156129aa5760008560000181815250506129f0565b836000015183600001516129be9190614288565b856000018181516129cf9190614254565b915081815250508360000151816129e69190614288565b8560200181815250505b829150509392505050565b5b60208110612a3a5781518352602083612a159190614288565b9250602082612a249190614288565b9150602081612a339190614254565b90506129fc565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506000821115612a91576001826020612a779190614254565b610100612a84919061447d565b612a8e9190614254565b90505b8019835116818551168181178652505050505050565b612aaf613093565b6000612acd8560000151866020015186600001518760200151612e3a565b905080836020018181525050846020015181612ae99190614254565b8560000151612af89190614254565b8360000181815250508460200151811415612b1d576000856000018181525050612b4a565b83600001518360000151612b319190614288565b85600001818151612b429190614254565b915081815250505b829150509392505050565b60008083600001519050836000015183600001511015612b7757826000015190505b60008460200151905060008460200151905060005b83811015612c6e576000808451915083519050808214612c3a5760007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506020871015612c1457600184886020612be49190614254565b612bee9190614288565b6008612bfa91906144c8565b6002612c06919061447d565b612c109190614254565b1990505b600081831682851603905060008114612c37578098505050505050505050612c89565b50505b602085612c479190614288565b9450602084612c569190614288565b93505050602081612c679190614288565b9050612b8c565b5084600001518660000151612c83919061452c565b93505050505b92915050565b60008060005b8451811015612ce05783858281518110612cb257612cb1613e89565b5b60200260200101511415612ccd578060019250925050612ce9565b8080612cd890613f48565b915050612c95565b50600080915091505b9250929050565b6000808490506000868511612e215760208511612dc357600080861115612d49576001866020612d209190614254565b6008612d2c91906144c8565b6002612d38919061447d565b612d429190614254565b1960001b90505b60008186511690506000878a8a612d609190614288565b612d6a9190614254565b905060008386511690505b828114612db557818610612d9c578a8a612d8f9190614288565b9650505050505050612e32565b8580612da790613f48565b965050838651169050612d75565b859650505050505050612e32565b60008585209050600091505b8588612ddb9190614254565b8211612e1f576000868420905080821415612dfc5783945050505050612e32565b600184612e099190614288565b9350508180612e1790613f48565b925050612dcf565b505b8686612e2d9190614288565b925050505b949350505050565b600080858411612f665760208411612f0257600080851115612e8e576001856020612e659190614254565b6008612e7191906144c8565b6002612e7d919061447d565b612e879190614254565b1960001b90505b6000818551169050858888612ea39190614288565b612ead9190614254565b925060008284511690505b818114612eeb57878411612ed25787945050505050612f6b565b8380612edd906145c0565b945050828451169050612eb8565b8684612ef79190614288565b945050505050612f6b565b600084842090508487612f159190614254565b86612f209190614288565b91505b858210612f64576000858320905080821415612f4f578583612f459190614288565b9350505050612f6b565b600183612f5c9190614254565b925050612f23565b505b849150505b949350505050565b604051806040016040528060008152602001612f8d6130ad565b81525090565b828054612f9f90613ee7565b90600052602060002090601f016020900481019282612fc15760008555613008565b82601f10612fda57805160ff1916838001178555613008565b82800160010185558215613008579182015b82811115613007578251825591602001919060010190612fec565b5b5090506130159190613114565b5090565b828054828255906000526020600020908101928215613068579160200282015b82811115613067578251829080519060200190613057929190612f93565b5091602001919060010190613039565b5b5090506130759190613131565b5090565b604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001600081525090565b60405180610140016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016000151581526020016000600381111561310e5761310d61353e565b5b81525090565b5b8082111561312d576000816000905550600101613115565b5090565b5b8082111561315157600081816131489190613155565b50600101613132565b5090565b50805461316190613ee7565b6000825580601f106131735750613192565b601f0160209004906000526020600020908101906131919190613114565b5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131c082613195565b9050919050565b6131d0816131b5565b82525050565b60006020820190506131eb60008301846131c7565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6132588261320f565b810181811067ffffffffffffffff8211171561327757613276613220565b5b80604052505050565b600061328a6131f1565b9050613296828261324f565b919050565b600067ffffffffffffffff8211156132b6576132b5613220565b5b6132bf8261320f565b9050602081019050919050565b82818337600083830152505050565b60006132ee6132e98461329b565b613280565b90508281526020810184848401111561330a5761330961320a565b5b6133158482856132cc565b509392505050565b600082601f83011261333257613331613205565b5b81356133428482602086016132db565b91505092915050565b600060208284031215613361576133606131fb565b5b600082013567ffffffffffffffff81111561337f5761337e613200565b5b61338b8482850161331d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6133d3816133c0565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156134135780820151818401526020810190506133f8565b83811115613422576000848401525b50505050565b6000613433826133d9565b61343d81856133e4565b935061344d8185602086016133f5565b6134568161320f565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006134998383613428565b905092915050565b6000602082019050919050565b60006134b982613461565b6134c3818561346c565b9350836020820285016134d58561347d565b8060005b8581101561351157848403895281516134f2858261348d565b94506134fd836134a1565b925060208a019950506001810190506134d9565b50829750879550505050505092915050565b60008115159050919050565b61353881613523565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061357e5761357d61353e565b5b50565b600081905061358f8261356d565b919050565b600061359f82613581565b9050919050565b6135af81613594565b82525050565b60006101408301600083015184820360008601526135d38282613428565b915050602083015184820360208601526135ed8282613428565b915050604083015184820360408601526136078282613428565b915050606083015184820360608601526136218282613428565b9150506080830151848203608086015261363b8282613428565b91505060a083015184820360a08601526136558282613428565b91505060c083015184820360c086015261366f82826134ae565b91505060e083015184820360e086015261368982826134ae565b9150506101008301516136a061010086018261352f565b506101208301516136b56101208601826135a6565b508091505092915050565b60006040830160008301516136d860008601826133ca565b50602083015184820360208601526136f082826135b5565b9150508091505092915050565b600061370983836136c0565b905092915050565b6000602082019050919050565b600061372982613394565b613733818561339f565b935083602082028501613745856133b0565b8060005b85811015613781578484038952815161376285826136fd565b945061376d83613711565b925060208a01995050600181019050613749565b50829750879550505050505092915050565b600060208201905081810360008301526137ad818461371e565b905092915050565b600067ffffffffffffffff8211156137d0576137cf613220565b5b602082029050602081019050919050565b600080fd5b6137ef816133c0565b81146137fa57600080fd5b50565b60008135905061380c816137e6565b92915050565b6000613825613820846137b5565b613280565b90508083825260208201905060208402830185811115613848576138476137e1565b5b835b81811015613871578061385d88826137fd565b84526020840193505060208101905061384a565b5050509392505050565b600082601f8301126138905761388f613205565b5b81356138a0848260208601613812565b91505092915050565b6000602082840312156138bf576138be6131fb565b5b600082013567ffffffffffffffff8111156138dd576138dc613200565b5b6138e98482850161387b565b91505092915050565b600060208284031215613908576139076131fb565b5b6000613916848285016137fd565b91505092915050565b600060408301600083015161393760008601826133ca565b506020830151848203602086015261394f82826135b5565b9150508091505092915050565b60006020820190508181036000830152613976818461391f565b905092915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156139a3576139a2613220565b5b602082029050602081019050919050565b60006139c76139c284613988565b613280565b905080838252602082019050602084028301858111156139ea576139e96137e1565b5b835b81811015613a3157803567ffffffffffffffff811115613a0f57613a0e613205565b5b808601613a1c898261331d565b855260208501945050506020810190506139ec565b5050509392505050565b600082601f830112613a5057613a4f613205565b5b8135613a608482602086016139b4565b91505092915050565b613a7281613523565b8114613a7d57600080fd5b50565b600081359050613a8f81613a69565b92915050565b60048110613aa257600080fd5b50565b600081359050613ab481613a95565b92915050565b60006101408284031215613ad157613ad061397e565b5b613adc610140613280565b9050600082013567ffffffffffffffff811115613afc57613afb613983565b5b613b088482850161331d565b600083015250602082013567ffffffffffffffff811115613b2c57613b2b613983565b5b613b388482850161331d565b602083015250604082013567ffffffffffffffff811115613b5c57613b5b613983565b5b613b688482850161331d565b604083015250606082013567ffffffffffffffff811115613b8c57613b8b613983565b5b613b988482850161331d565b606083015250608082013567ffffffffffffffff811115613bbc57613bbb613983565b5b613bc88482850161331d565b60808301525060a082013567ffffffffffffffff811115613bec57613beb613983565b5b613bf88482850161331d565b60a08301525060c082013567ffffffffffffffff811115613c1c57613c1b613983565b5b613c2884828501613a3b565b60c08301525060e082013567ffffffffffffffff811115613c4c57613c4b613983565b5b613c5884828501613a3b565b60e083015250610100613c6d84828501613a80565b61010083015250610120613c8384828501613aa5565b6101208301525092915050565b600060208284031215613ca657613ca56131fb565b5b600082013567ffffffffffffffff811115613cc457613cc3613200565b5b613cd084828501613aba565b91505092915050565b600067ffffffffffffffff821115613cf457613cf3613220565b5b602082029050602081019050919050565b6000613d18613d1384613cd9565b613280565b90508083825260208201905060208402830185811115613d3b57613d3a6137e1565b5b835b81811015613d8257803567ffffffffffffffff811115613d6057613d5f613205565b5b808601613d6d8982613aba565b85526020850194505050602081019050613d3d565b5050509392505050565b600082601f830112613da157613da0613205565b5b8135613db1848260208601613d05565b91505092915050565b600060208284031215613dd057613dcf6131fb565b5b600082013567ffffffffffffffff811115613dee57613ded613200565b5b613dfa84828501613d8c565b91505092915050565b613e0c816131b5565b8114613e1757600080fd5b50565b600081359050613e2981613e03565b92915050565b600060208284031215613e4557613e446131fb565b5b6000613e5384828501613e1a565b91505092915050565b600060208284031215613e7257613e716131fb565b5b6000613e8084828501613aa5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613eff57607f821691505b60208210811415613f1357613f12613eb8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613f53826133c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613f8657613f85613f19565b5b600182019050919050565b600081905092915050565b6000613fa7826133d9565b613fb18185613f91565b9350613fc18185602086016133f5565b80840191505092915050565b6000613fd98284613f9c565b915081905092915050565b613fed816133c0565b82525050565b60006020820190506140086000830184613fe4565b92915050565b600082825260208201905092915050565b7f5468652071756572792073686f756c64206e6f7420626520656d707479210000600082015250565b6000614055601e8361400e565b91506140608261401f565b602082019050919050565b6000602082019050818103600083015261408481614048565b9050919050565b6000614096826133d9565b6140a0818561400e565b93506140b08185602086016133f5565b6140b98161320f565b840191505092915050565b600060208201905081810360008301526140de818461408b565b905092915050565b60006140f96140f48461329b565b613280565b9050828152602081018484840111156141155761411461320a565b5b6141208482856133f5565b509392505050565b600082601f83011261413d5761413c613205565b5b815161414d8482602086016140e6565b91505092915050565b600061416961416484613988565b613280565b9050808382526020820190506020840283018581111561418c5761418b6137e1565b5b835b818110156141d357805167ffffffffffffffff8111156141b1576141b0613205565b5b8086016141be8982614128565b8552602085019450505060208101905061418e565b5050509392505050565b600082601f8301126141f2576141f1613205565b5b8151614202848260208601614156565b91505092915050565b600060208284031215614221576142206131fb565b5b600082015167ffffffffffffffff81111561423f5761423e613200565b5b61424b848285016141dd565b91505092915050565b600061425f826133c0565b915061426a836133c0565b92508282101561427d5761427c613f19565b5b828203905092915050565b6000614293826133c0565b915061429e836133c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156142d3576142d2613f19565b5b828201905092915050565b7f54686973206b6579206973206e6f742076616c69642100000000000000000000600082015250565b600061431460168361400e565b915061431f826142de565b602082019050919050565b6000602082019050818103600083015261434381614307565b9050919050565b60008160011c9050919050565b6000808291508390505b60018511156143a15780860481111561437d5761437c613f19565b5b600185161561438c5780820291505b808102905061439a8561434a565b9450614361565b94509492505050565b6000826143ba5760019050614476565b816143c85760009050614476565b81600181146143de57600281146143e857614417565b6001915050614476565b60ff8411156143fa576143f9613f19565b5b8360020a91508482111561441157614410613f19565b5b50614476565b5060208310610133831016604e8410600b841016171561444c5782820a90508381111561444757614446613f19565b5b614476565b6144598484846001614357565b925090508184048111156144705761446f613f19565b5b81810290505b9392505050565b6000614488826133c0565b9150614493836133c0565b92506144c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846143aa565b905092915050565b60006144d3826133c0565b91506144de836133c0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561451757614516613f19565b5b828202905092915050565b6000819050919050565b600061453782614522565b915061454283614522565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561457d5761457c613f19565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156145b5576145b4613f19565b5b828203905092915050565b60006145cb826133c0565b915060008214156145df576145de613f19565b5b60018203905091905056fea26469706673582212203838bec763aa985ab1a5300d93f5dfc82e423bb39216ff8279546c80339c2d6664736f6c63430008090033";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Registry";
  }

  deploy(
    _regexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Registry> {
    return super.deploy(_regexAddress, overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(
    _regexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_regexAddress, overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }
  static readonly contractName: "Registry";
  public readonly contractName: "Registry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
