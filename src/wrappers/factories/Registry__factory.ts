/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Registry, RegistryInterface } from "../Registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_regexAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ContractRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indices",
        type: "uint256[]",
      },
    ],
    name: "indicesToMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_query",
        type: "string",
      },
    ],
    name: "query",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "regexAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_author",
        type: "address",
      },
    ],
    name: "retrieveByAuthor",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_event",
        type: "string",
      },
    ],
    name: "retrieveByEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_function",
        type: "string",
      },
    ],
    name: "retrieveByFunction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "retrieveById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_internalAddress",
        type: "string",
      },
    ],
    name: "retrieveByInternalAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "retrieveByName",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_signature",
        type: "string",
      },
    ],
    name: "retrieveBySignature",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Registry.BlockchainType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "retrieveByType",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "retrieveByUrl",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    name: "retrieveByVersion",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "address",
                name: "author",
                type: "address",
              },
              {
                internalType: "string",
                name: "internalAddress",
                type: "string",
              },
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "string",
                name: "signature",
                type: "string",
              },
              {
                internalType: "string",
                name: "version",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "functions",
                type: "string[]",
              },
              {
                internalType: "string[]",
                name: "events",
                type: "string[]",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
              {
                internalType: "enum Registry.BlockchainType",
                name: "blockChainType",
                type: "uint8",
              },
            ],
            internalType: "struct Registry.SCDMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Registry.SCDMetadataWithID[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_regexAddress",
        type: "address",
      },
    ],
    name: "setRegexAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "internalAddress",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "functions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "events",
            type: "string[]",
          },
          {
            internalType: "enum Registry.BlockchainType",
            name: "blockChainType",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.SCDMetadataIn",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "internalAddress",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "string",
            name: "signature",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "functions",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "events",
            type: "string[]",
          },
          {
            internalType: "enum Registry.BlockchainType",
            name: "blockChainType",
            type: "uint8",
          },
        ],
        internalType: "struct Registry.SCDMetadataIn[]",
        name: "_metadata",
        type: "tuple[]",
      },
    ],
    name: "storeMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Registry";
  }

  deploy(
    _regexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Registry> {
    return super.deploy(_regexAddress, overrides || {}) as Promise<Registry>;
  }
  getDeployTransaction(
    _regexAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_regexAddress, overrides || {});
  }
  attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }
  static readonly contractName: "Registry";
  public readonly contractName: "Registry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
