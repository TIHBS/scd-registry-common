/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Util, UtilInterface } from "../Util";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "copy",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pos",
        type: "uint256",
      },
    ],
    name: "split",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "substring",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
      {
        internalType: "string",
        name: "_delim",
        type: "string",
      },
    ],
    name: "tokenize",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type UtilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Util__factory extends ContractFactory {
  constructor(...args: UtilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Util";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Util> {
    return super.deploy(overrides || {}) as Promise<Util>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Util {
    return super.attach(address) as Util;
  }
  connect(signer: Signer): Util__factory {
    return super.connect(signer) as Util__factory;
  }
  static readonly contractName: "Util";
  public readonly contractName: "Util";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilInterface {
    return new utils.Interface(_abi) as UtilInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Util {
    return new Contract(address, _abi, signerOrProvider) as Util;
  }
}
